---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:

# https://skaffold.dev/docs/install/    
    # - name: "deploy skaffold via docker on focal amd64"
    #   dist: focal
    #   arch: amd64
    #   language: python
    #   # python: 3.7
    #   services:
    #   - docker
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - docker run gcr.io/k8s-skaffold/skaffold:latest skaffold version
    #   after_success:
    #     - deactivate

# https://skaffold.dev/docs/install/    
    # - name: "deploy skaffold via docker on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   # python: 3.7
    #   services:
    #   - docker
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - docker run gcr.io/k8s-skaffold/skaffold:latest skaffold version
    #   after_success:
    #     - deactivate

# TESTED NOT OK
# https://skaffold.dev/docs/install/    
    # - name: "deploy skaffold on focal amd64"
    #   dist: focal
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest
    #     - sudo make deploy-skaffold-latest
    #     - sudo make deploy-skaffold-app
    #   after_success:
    #     - deactivate

# TESTED OK
# https://minikube.sigs.k8s.io/docs/start/
# https://kubernetes.io/docs/tasks/tools/install-kubectl/
# https://skaffold.dev/docs/install/    
    # - name: "deploy skaffold sample app on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest
    #     - sudo make deploy-skaffold-latest
    #     - sudo make deploy-skaffold-app
    #   after_success:
    #     - deactivate

    # TESTED OK
    # - name: "deploy Quarkus Development mode on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest-quarkus-dev
    #   after_success:
    #     - deactivate

# TESTED OK        
    # - name: "deploy Quarkus Production mode - Quarkus JVM image on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest-quarkus-prod-jvm
    #   after_success:
    #     - deactivate        

  # TESTED OK
    # - name: "deploy Quarkus Production mode - Quarkus Native image on bionic amd64"
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-minikube-latest-quarkus-prod-native
    #   after_success:
    #     - deactivate 


    - name: "deploy Quarkus Production mode - Quarkus Native image on bionic amd64"
      dist: bionic
      arch: amd64
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
        # Verify Maven is using the Java you expect
        - mvn --version
      script:
        - sudo make deploy-quarkus-app
      after_success:
        - deactivate         